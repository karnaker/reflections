What happens when you initialize a repository? Why do you need to do it?

  It recognizes the ordinary folder you are in as a git repository. If you do
  not initialize the folder, you will not be able to make commits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  Staging area specifies what files will get updated in the commit. This gives
  you control of the commits, and what gets committed.

How can you use the staging area to make sure you have one commit per logical
change?

  You can compare the staging area to the last commit using git diff -- staged
  and to the working directory, and make sure the changes form one logical
  change before committing them.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  If you're making experimental changes, or a different language version, or
  some other change that would want you to preserve a master, the branch
  capability comes in handy.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
